# 🌍 TravelProject

여행한 장소를 기록하고 시간 순으로 확인하는 사용자 중심의 여행 기록 서비스입니다.

사용자는 지도를 기반으로 방문한 장소에 마커를 등록하고, 각 위치에 메모를 작성할 수 있습니다. JWT 기반 인증 시스템으로 사용자별로 안전하게 데이터를 저장하며, 개인화된 여행 기록 확인이 가능합니다.

---

## 🛠️ 기술 스택

| 계층 | 기술명 |
|------|--------|
| Language | Java 17 |
| Framework | Spring Boot 3.x, Spring Security |
| Database | MySQL (local), Spring Data JPA |
| API 문서화 | Swagger (Springdoc OpenAPI) |
| 인증 | JWT (JSON Web Token) |
| IDE/Build Tool | IntelliJ IDEA, Gradle |
| 기타 | Lombok, Validation, Kakao Map API (지도 기능) |

---

## 📌 주요 기능

| 기능 구분 | 상세 설명 |
|----------|-----------|
| 🔐 회원가입/로그인 | JWT를 사용한 사용자 인증 (Spring Security 기반) |
| 🗺️ 지도에 마커 등록 | 사용자가 방문한 장소를 Kakao Map으로 위치 지정 후 등록 |
| 📝 메모 저장 | 각 마커에 텍스트 메모를 저장 |
| 🧑‍🤝‍🧑 사용자별 마커 구분 | 로그인한 사용자에 따라 저장된 마커/메모 구분 |
| 📄 Swagger 문서 제공 | Swagger UI로 API 테스트 및 명세 제공 |

---

## 🧠 핵심 로직 흐름 요약

### 1. 사용자 인증

- 로그인 성공 시 JWT 발급 및 전달
- 이후 모든 API 요청 시 Authorization 헤더에 JWT 포함
- JWT 파싱 → 인증 객체 생성 → `SecurityContextHolder`에 저장

### 2. 마커 등록

- 프론트에서 전달받은 `lat`, `lng`, `memo`를 백엔드에서 받아 처리
- 인증된 사용자 정보를 기반으로 해당 마커와 사용자 연동 후 저장
- 사용자별 마커 조회 시 로그인된 사용자 기준으로 필터링

### 3. 연관관계 매핑

- `User (1) ↔ Marker (N)` 단방향 연관관계
- Marker 저장 시 `marker.setUser(User)` 설정 후 JPA가 자동 연동 처리

---

## 🚧 Trouble Shooting (실제 사용자 시나리오 기반)

### 1️⃣ 사용자 마커 저장 실패 (ConstraintViolationException)

- **문제**: 마커 저장 시 `User` 정보가 null로 저장됨 → 외래키 제약 위반 발생
- **원인**: `@AuthenticationPrincipal`을 통해 로그인 사용자 정보를 받지 않음
- **해결**: JWT 토큰에서 사용자명 추출 후, `userRepository.findByUsername()` 호출하여 직접 유저 객체 바인딩

### 2️⃣ 프론트에서 마커 저장 시 403 Forbidden 발생

- **문제**: 로그인 상태인데도 마커 등록 API에서 403 오류 발생
- **원인**: Security 설정에서 `/marker/**` 경로에 `authenticated()` 적용 누락
- **해결**: Spring Security의 `HttpSecurity` 설정에서 명확히 `/auth/**`는 `permitAll`, 그 외는 `authenticated()`로 구분

### 3️⃣ 프론트 요청 시 CORS 오류

- **문제**: 프론트(localhost:3000)에서 백엔드(localhost:8080)로 요청 시 CORS 에러 발생
- **해결**: `WebMvcConfigurer`를 통해 CORS 전역 허용 추가 or `allowedOrigins("http://localhost:3000")` 명시

### 4️⃣ 마커 초기화 문제

- **문제**: 로그인할 때마다 기존 마커들이 사라짐
- **원인**: 사용자별 필터링 로직이 누락되어 전체 마커 중 로그인 사용자 필터링 안됨
- **해결**: `markerRepository.findAllByUserId()`로 사용자 기준 조회 로직 수정

---

## 🗂 ERD

```
User (1) ───────────────┐
                       │
                  (N) Marker

User: id, username, password, roles
Marker: id, lat, lng, memo, user_id (FK)
```

---

## 💡 확장 아이디어

- 여행 사진 업로드 기능 (AWS S3 등 활용한 멀티파트 업로드)
- 친구 초대 및 마커 공유 기능
- 날짜 필터 기반 여행일지 조회
- 마커 위치 기반 자동 태그 기능

---

## 👨‍💻 개발자

| 이름 | 역할 |
|------|------|
| JoMedan | 백엔드 개발, 인증/보안 구현, API 설계 |

---

## 🔗 GitHub

[🔗 GitHub 저장소](https://github.com/JoMedan/TravelProject)
